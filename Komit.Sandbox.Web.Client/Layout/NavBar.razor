@using Komit.Base.Ui.Components.Components.Dialog
@using Komit.Base.Ui.Helpers
@using Komit.Sandbox.Web.Client.Pages
@using MudBlazor
@inject IDialogService DialogService

<MudAppBar Elevation="4" Color="Color.Info">
    <MudToolBar>
        <MudText Typo="Typo.h6" Class="ml-2">Navigation</MudText>
        <MudSpacer />
        <MudButtonGroup Variant="Variant.Outlined" Color="Color.Default">
            <MudButton Href="." Class="mud-theme-primary ml-2">Home</MudButton>
            <MudButton Href="dev/access" Class="mud-theme-primary ml-2">Access</MudButton>
            <MudButton Href="users" Class="mud-theme-primary ml-2">Users</MudButton>
            <MudButton Href="boxes" Class="mud-theme-primary ml-2">Boxes</MudButton>
            <MudButton Href="wine-list" Class="mud-theme-primary ml-2">WineList</MudButton>
            <MudButton Href="board" Class="mud-theme-primary ml-2">Board</MudButton>
            <MudButton Href="cycle-list" Class="mud-theme-primary ml-2">CycleList</MudButton>
            <MudButton Href="books" Class="mud-theme-primary ml-2">Books</MudButton>
            <MudButton OnClick="LoadDialog" Class="mud-theme-primary ml-2">@DialogText</MudButton>
        </MudButtonGroup>
    </MudToolBar>
</MudAppBar>
@code 
{
    private string DialogText { get; set; } = "Dialog";
    RenderFragment Cycle => builder =>
    {
        builder.OpenComponent(0, typeof(Cycle));
        builder.CloseComponent();
    };
    public async Task Test()
    {
        Console.WriteLine("Test Dialog EventCallback");        
    }
    private async Task LoadDialog()
    {
        Console.WriteLine("Test Dialog");        

        Func<Task>? resultCallback = async () => await Test();
        var dialogSettings = DialogHelper.DefaultCustomDialogSettings(Cycle, resultCallback, CancelButtonVisible: true);
        await DialogService.ShowAsync<CustomDialog>("Title Test", dialogSettings.Parameters, dialogSettings.Options);                
        
    }
}
